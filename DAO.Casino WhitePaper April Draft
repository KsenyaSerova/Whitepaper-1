
1. Introduction
1.1 Gambling Games
1.2 Common Issues in Online Gambling Industry
2. DAO.Casino Protocol
 2.1. Roles of the participants
2.1.1. Developers 
2.1.2. Platforms (Casino operators)
2.1.3. Referrers (Affiliate Program)
2.1.4. Random Number Providers
2.1.5. Bankroll Backers
2.1.6. Players
2.1.7. Autonomous Agents
2.1.8. Protocol initial contributors & core team

2.2 Token System 
2.3. Replication Mechanisms & DAO.Factory
2.4. Example - Dice

3. Obtaining random numbers
3.1. Definition
3.2. Methods of generating random numbers in a centralised online casinos
3.3. Methods of random numbers generation in a decentralised casino
3.4. Main methods of obtaining RNG in decentralised deterministic system
3.5. Initial implementation for two parties
3.6. Potential implementations and research
4. Alpha platform
4.1. Platform tasks
4.2. Thematic priorities of the platform
4.3. Platform for developers
7. Conclusion
References
Appendices
Contracts
Crowdfunding


1. Introduction
DAO.casino is a protocol for online gambling industry that removes a need in a trusted third party.
Trusted third party that is needed in a traditional online gambling industry to function is replaced with smart contracts that act as autonomous agents which automatically reward developers, security auditors and community members for their contributions. Equally unpredictable random numbers that determine outcomes in each game are provided by economically incentivised participants interacting with the RNG contract. Automating some crucial aspects of gambling industry that normally require trust will reduce a risk of fraud while enabling diversity of the services and better UX.
DAO.Casino will provide a decentralised governance system and a P2P marketplace for game developers. The system is based on economic incentive mechanisms and powered by Ethereum (business logic of the system is expressed in solidity contracts)
BET - DAO.Casino internal token - is used as point system for incentivisation as well as a sub-currency which is used in the games. BET token is a standard Ethereum ERC20 token.
This protocol can support a large number independent front-end platforms where players can discover and play scam-free games. 
In the beginning we can expect existing licensed online casino operators can integrate with the protocol to reduce costs, while long term new forms of regulations more suitable for decentralised, transparent and automated systems can emerge. 
What DAO.Casino is not
DAO.Casino, despite of it’s name, is not an online casino. 
DAO.Casino doesn’t eliminate online casino operators. For those casino operators that are willing to play fair it reduces their operational costs, removed their responsibility to maintain user account balances and to provide randomness to determine the outcome of the game.
DAO.Casino is not an investment vehicle. 
Roles of the participants and their interactions within the system are described in the section 2. 


1.1 Gambling games 
Legal turnover in the world gambling business reached 50bn in 2017 with projected turnover of 56bn [1]. 60% of online casinos belong to 22 leading networks. Another 30% are subsidiaries of well-known offline casinos, and the remaining 10% is owned by private individuals. Taking into account these monopoly phenomena, the developer has few chances to attract the required number of audience members to start its project in this market.
Online gambling games cause distrust on the part of the players in most cases, however up until the development of technology providing a platform for automation of trust, such as Ethereum, there wasn’t a possibility to provide any alternative. 
1.2. Common Issues in Online Gambling Industry
We can summarise existing issues in the online gambling industry as originating from a concentration of trust, in all the aspects of gambling industry from RNG to user balance account management, to developers access to the market as described in the introduction. 
Some common problems experienced by the players: 
After transferring the money to the game account, it is not credited or it is stolen
After  withdrawing the money from the deposit, it has not been credited to the card
The player has not received the promised bonuses
The player is not able to enter his game account
Hidden fees: casinos charge a fee for the gain withdrawal
The player can withdraw funds only on a certain day

Some of the existing issues in the market of online gambling that DAO.Casino protocol can solve:
Risk of fraud on behalf of online casinos
Inability to check the result of the draw
High and hidden fees
High entry level for the game developers 
High costs of running an online casino
Operations overheads such as integrating payment systems & user account balance management
    	
2. DAO.Casino Protocol
The objective of Dao.Casino protocol is to enable a sustainable model which benefits all the parties involved in the online gambling business process. (i.e it should be more profitable for the developer to use Dao.Casino protocol, rather than work on its own, and less costly for a casino operator to provide better service for the players. Players should have access to more diverse range of games from independent game developers while having a higher level of security than in traditional online casinos).
Single points of failure - processes of value transfer where trusted third party would be required in a conventional online gambling business is replaced by code consistently executed by Ethereum network - a system of smart contracts. These contracts are, simply speaking, just escrows that can be triggered by particular actions performed by the participants and nothing else. These actions correspond to the value that the participants add to the ecosystem. When there is no human actors with administrator permissions that can change value distribution processes there is no risk of such actors would become corrupt and make changes in their favour. This consistency of code is a pretty useful feature in the context of gambling business. 
 Security of the system is achieved through transparency, consistency and cryptographic verifiability of software used to automate processes otherwise involving trust, and economic incentive mechanisms for it’s human participants. 
DAO.Casino protocol still has a fee system, but the distribution of fees is a hard coded reward system for all the participants described further. There is no hidden fees. Dao.Casino distributes tokens accumulated by a particular game contract as follows: 

Game Developer - 25%
Casino Operator * - 25% 
Referrer - 25%
Bankroll backers - 25%
 
*Casino operator / platform and a Referrer can be one entity

Despite of Gas cost that is required for Ethereum powered software to run, the fees should remain lower than in traditional server based online gambling. This is because the gas is paid per operation, and only for the operations and storage that is used. 
Game’s front end can be stored either on the server or on the network using decentralised file storage systems such as IPFS or Ethereum’s native Swarm. Using Swarm will also allow to program the game to pay for it’s own front-end storage.

Dao.Casino Protocol Goals:
Remove the need in a trusted party in all aspects of online gambling industry, therefore:

Reduce operational costs of online gambling therefore provide higher payouts
Reduce a risk of fraud
Remove the need and responsibility from online casino operators to maintain player’s account balances
Enable game developers to monetise their work while maintaining their IP
Enable game developers to access bankroll for their game without extra responsibility for managing it
Enable an open ecosystem of provably fair interoperable online casinos

Integrate a system of replicable templates and incentivised audit to allow game developers not familiar with Solidity to benefit from a new value transfer paradigm that Ethereum offers.


Add Fig 1 (figure from the old WP former Business Model section is no longer relevant, and moved here

2.1. Roles
System Participants. During initial design we identified a number of roles that are needed for the system to develop and to function. Some are common roles from the traditional online gambling industry i.e. casino operators, game developers, other roles have been added to a decentralised architecture. 
Game developers
Casino Operators / Platforms
Referrers
Random Number Providers
Bankroll Backers
Players
Autonomous Agents
DAO.Casino core team/creators*
*Creators include not just a current research and implementation core team, but all the early contributors i.e initial security auditors and the first 30 game dev teams who integrated their test games with the DAO.Casino protocol.

2.1.1. Developers
Developers refers to both: game developers and contract developers. Whoever provides a functional piece of software automatically receives tokens to their EOA by the DAO.Casino system proportionally to the usage of this software. Independent game developers should be able to collaborate with casino operators easier and retain their IP in the game. 
A front-end developer who is capable of creating a good game doesn’t have to developer a gambling game smart contract, but use existing ones. In this case automatic developer’s rewards will be split between the creator of the contract and the creator of the front-end. 
For the past 1.5 years we have seen growth of gaming and gambling on Ethereum. However we cannot expect that every good game creator will learn how to program for EVM, while there is a lot of talent amongst independent game devs. To leverage existing game design and development skills tested smart contract templates can be used by several game dev teams. Ethereum ecosystem allows teams to share backend without compromising security.   
2.1.2. Casino Operators
DAO.Casino system can accommodate multiple front-end platforms customised for different user groups and regions. They remain independent while using the same governance and value exchange protocol. The platform layer of the system is therefore federated. Platforms receive tokens to their EOA accounts proportionate to the usage. If the platform attracts new players to the game it becomes a Referrer and receives Referrer’s reward (see 2.1.3)
Front-end platforms built on top of DAO.Casino system do not have to have additional account balance systems, since the balances and the balance history is stored in Ethereum blockchain. 
Existing online casino operators can create front-end platforms to interface with the token system. We can estimate that as the system evolves, independent game developers teams will be able to form groups and become casino operators with appropriate authorisation.
In a federated model casino operators still provide value to their customers by customising platforms for a particular user group, creating their own ranking and recommendation systems. It is up for the operator to conduct KYC procedures required in their jurisdiction and securely store sensitive user data in compliance with personal data protection laws. User accounts in the whole system are EOAs the only data which is recorded on the blockchain is their balances and tx history. 
Front-end platforms are, as in the traditional online gambling industry, are used for game discovery, rating and as a human interface. However, instead of the server based backend, they run on Ethereum.
They might also integrate user wallets to store small amounts of BET. It is recommended not to store larger amounts of BET in browser based platforms. 
Initial Test Platform. At least one platform is needed for the system to function. DAO.Casino core team is implementing a test frontend platform with a number of games that will be integrated with DAO.Casino governance & reward system on Ethereum mainnet.  See section 4. Maintenance of this platform, future research and testing will be conducted by a (not for profit?) foundation - «Dao.Casino Platform». 

2.1.3. Referrers 
The Referrer  is a member of the affiliate program who brought a referral. The Referral is a participant of the affiliate program who signed up under the recommendation of another participant. 
If you decentralise all the things how do you know where things are? In a decentralised system discovery can be facilitated by economically incentivized participants. Affiliate programs are commonly used for promotion of products and services. The only difference in DAO.Casino system is that referrers, same as all other active participants, are rewarded automatically, and can be sure that they will get rewarded. Another difference is that the rewards depend on whether the referral in question is an active player, to make sure that the affiliate system is sybil proof and the game creator doesn’t share the funds generated by the game with the referrer for nothing. 
Referrers receive 20% of the tokens generated by the game they help promoting while their referral is actively using it. If the referrer is absent, and the player came to the platform on its own through the platform’s own channels, then the platform itself is considered the referrer, which means that it receives the reward. A player willing to top up their BET balance can become a referrer. It applies to other participants. 
2.1.4. Random Number Providers *
Random Number providers provide values to the contract that is then generates a value that determines and outcome of the game and receive tokens in exchange.
In the implemented PRNG version Random Provider and Bankroll Backer are same entity. For the current PRNG see section 3. Future versions may include a hybrid system of economically incentivised oracles:
Participants in incentivised oracles system: in addition to the pseudorandom algorithm, an economic algorithm is needed to ensure that the Random Number Providers cannot exploit their partial access to the data which is used in PRNG so that the outcomes of the games remain equally unpredictable for all parties. Random number provider’s system is a hybrid between generating pseudorandomness on EVM and using authenticated data feeds (oracles). Both methods and their weaknesses are described in a section 3.4.  
To participate as a Random Number Provider a participant is required to a) lock their token in the contract b) send data to the RNG contract from which the PRNG will be generated. Intentional or unintentional , malicious behaviour i.e. an attempt to predict the outcome of the game will result in the locked tokens to be distributed as rewards to other participants.  Because of this staking system Random Number Providers are somehow similar to miners in a PoS system.
2.1.5. Bankroll Backers
Any token holder can support any particular game by taking on a role of a bankroll backer. Bankroll Backers locks their token in a game contract of their choice and automatically receive a reward. 
Bankroll Backer behaviour can vary depending on the game contract and what PRNG system is used. In a first implementation Bankroll Backer provides BET tokens to the bankroll of the game and a value from which the the outcome of the game is derived. 
2.1.6. Players
Players discover games through the platforms and use their tokens as an ingame currency. Player can obtain tokens by becoming an active participant such as a Random Provider or a Referrer or support a crowdfunding campaign at launch. A casino operator can also choose to exchange the tokens to and from common cryptocurrencies. 
For the past year we see more and more gambling games projects built for Ethereum. We can expect that early adopters will be Ethereum and decentralisation enthusiasts. Game contracts are accessible through Ethereum clients, but in the ideal situation a player doesn’t need to know anything about Ether or the technology itself to be able to play and discover games. 
2.1.7. Autonomous Agents
Autonomous agents are smart contracts that run on Ethereum that perform tasks that usually would require trust. 
We refer to those entities as agents, because a) their role is as important as any human actors in the system (with the only difference is that they can’t cheat and don’t need to be incentivised). b) once designed and deployed they do not have a human owner capable of withdrawing the tokens from the balances of contract accounts or control the contract in other ways. Instead a contract will “decide” whether to reward an EOA in question, according to it’s rules. Rules cannot be changed by a single party. If the contract in question is proved faulty and the rules do not satisfy the needs of human participants, it will be simply abandoned by the majority of human participants or by all of them. In a similar way an entire blockchain can be abandoned by miners. 
All contracts that are considered a part of the protocol should be autonomous agents - controlled by fair and authorised participants behaviour. Contracts that are deployed for crowdfunding and the issuance of BET are not considered a part of the protocol, but a step to design, deploy and improve it, and in this sense are not autonomous - managed by the foundation. Initial contributors are capable of distributing 26% of all tokens to particular addresses of initial contributors and transfer the rights to manage ether funds collected during the crowdfunding campaign to the foundation. 
2.1.8. Protocol initial contributors, foundation and core team
26% of all token supply will be distributed amongst initial contributors and the foundation.
Initial contributors:
First 30 teams that integrate their games with DAO.Casino protocol (with the reward system and the first source of PRNG (see section 3.5)
Teams that find and implement the most appropriate solution for PRNG
Authors and supporters of this protocol that will document the protocol, develop it further, and onboard new developers.
Contrary to a conventional server based project developers of the protocol don’t have a control of the system after it has been launch on Ethereum. Their influence stops at a design level. 
16% of all BET will be distributed amongst the contributors in the following way:
First game development teams will receive 3% of all available tokens 0.1% per team. 1% to the teams providing PRNG solution. 
1% of the BET goes to the team that finds and implements the best solution for the calculation of random numbers.  
1.5% Advisors and Security audit and 
0.5% Community engagement
10% will distributed amongst initial contributors who put work in designing, testing and implementing the system, finding resources, working with legal aspects and producing documentation. 
10% will be stored on the account managed by the foundation. 

2.2. Token System
DAO.Casino internal token called BET is a ERC20 token. It is used as ingame currency for all the game contracts integrated with the protocol and to power DAO.Casino reward system.  Ingame currency and a reward system are complimentary. Since the token can be used by the players, it rewards make more sense rather than a symbolic point system. 
Overtime BET accounts history can be used as a reputation system and for ranking the games and the players. For example most popular games would have more transaction history. 
Keys to the BET can be stored in platform wallets by players and in any Ethereum client or paper wallet by more advanced Ethereum users. It is not recommended to store a large amount of BET in a browser, even though as a subcurrency it might be less prone to theft than widespread and more well known crypto-token such as Ether.
Ingame currency
In a traditional gaming and online gambling industry large gaming companies prefer not to have an ingame token that works across the games because it disrupts their business model. However, when it comes down to smaller independent game producers, having interoperable token makes sense, since it eliminates the need to maintain user account balances. Interoperability between games also what makes the token valuable for the players.
Using Ethereum based subcurrency instead of ether reduces the risk of attacks of rational kind on the system after it scales. If the system is compromised by a malicious actor, the token will become worthless, so attacking the system wouldn’t be a rational thing to do.
Reward system
As described above all the participants providing value in one form or another are automatically rewarded with BET to their accounts. More games are accessible with this token, more participants would value it since it represents access to the games. 



Draft scheme (to confirm and make pretty)

3. Obtaining random numbers
In DAO.Casino context equal unpredictability of game outcomes that is determines by PRNG is what makes the game fair. 
Obtaining randomness (RNG), or to be more precise pseudo-randomness (PRNG) in the context of gambling games is a complex issue. There are different approaches for obtaining such values. Mathematical proofs and high quality of the selected method is important. In simple words, pseudo-random number that determines an outcome of the game should be equally unpredictable for all parties involved. Only in this case we can say that the players and the casino are protected from fraud, and the scheme is tested and reliable.
DAO.Casino project experiments with various ways of obtaining equally unpredictable randomness, (some of them have been tested by other projects) and implements a particular protocol “Signidice” described in the
 
 3.1. Definition
Pseudo random number generator (PRNG)[2] is an algorithm that generates a sequence of numbers, the elements of which are almost independent of each other and are subject to a given distribution (generally uniform).
Random Number Generator (RNG) is an algorithm which generates absolutely random numbers.
Such generators are mostly used for generating unique symmetric and asymmetric encryption keys. They are built mostly from a combination of cryptographically strong PRNG and external entropy sources (and, namely, this combination is commonly understood as RNG).
3.2. Methods of generating random numbers in a centralized casino
In a centralized casino (online and offline), different hardware and software compliant to certain standards is used to generate randomness.
Most poker rooms get special certificates to prove the viability of their RNG and software. Cigital, one of the largest companies in this field[3], is engaged, in certification of the poker software and RNG. The largest poker rooms Full Tilt Poker and PokerStars have the certificate of this company. The basis of any RNG testing is a set of NIST tests (National Institute of Standards and Technology), based on U.S. standard FIPS 140-2 (Federal Information Processing Standard). It includes various tests - from the test on ratio of 0 and 1 in the generated sequence, to the test on LZO algorithm compression (random sequence may not be significantly compressed, because it must not have many repetitive sequences).
The most common method of random number generation is called the linear congruential method. Alternatively, there is the additive congruential method. These methods generate a sequence of numbers satisfying the condition of randomness. The basis for the use of these and other methods of random number generation is the software, infinitely generating numbers, regardless of whether the participant is currently in the game or not. This eliminates the possibility of the player to independently determining the generation method used at this moment, and "guessing" the drawn numbers.
For example, U.S. law requires that the random number generators in slot machines should operate all the time. In addition, the software vendors deal with this issue directly.
FullTilt RNG is built on a similar principle with PokerStars, there are 3 independent generators: hardware RNG with a physical source of entropy and two independent PRNG (ISAAC and OpenSSL).
3.3. Existing methods of obtaining randomness in  decentralised gambling games on Ethereum blockchain.

1) Random numbers should be equally unpredictable for all parties.
2) The mechanism of obtaining a random number should be maximally decentralized
3) The possibility of intervention to defraud game results should be very small
3.3.1. Internal method 
Data derived from the blockchain data itself i.e block number, timestamps.
This method involves the use of current block hash values ​​or hash block.This method is not considered secure because it has a risk of manipulation on behalf of miners. See: http://martin.swende.se/blog/Breaking_the_house.html
3.3.2. External method 
in this case, a value is obtained from external sources. This scheme cannot be considered fully decentralized. Simply speaking, using a single source of PRNG is a bottleneck. One example of this approach is  project EtherDice[4]:
The only external dependency is a random number generator because the determination of blockchains  prevents from reliably obtaining a random number in a simple manner. The idea is that the contract holds a certain amount of so-called "generations." The generation starts when one of the two sources of random numbers produces hashes of proposed values. Two sources increase the complexity of compromise, nevertheless they do not cancel that possibility completely. The hashes are saved, and the contract is waiting for some time in order that the rates are obtained in the current generation. After the first bet, the generation takes the next bet for more blocks, and then closes. The contract is waiting for a few more blocks in order to put the generation into the "value disclosure" regime. The sources of random numbers reveal random values (the hashes are verified), after which the players can receive the gains. Several generations work simultaneously and in parallel, so the system is able to accept bets at any time.
Oracles (authenticated data feed) - Another external method. External generators of random numbers are translated into the blockchain network. This approach is used, for example, by etheroll.com[5]. The weak spot in this approach is that the oracles can also be compromised. 
The source of random values is Random.org, which we can get through Oraclize.it[6]. The latter allows us to increase security with the help of "TLSNotary" technology, which can prove that the number was not changed after it was requested by Random.org. Unfortunately, there is no easy way to verify it directly from a smart contract. Such a verification can be made only after a certain time.



Commit / Reveal - quite an advanced distributed method for producing random values. This approach is actively used in RanDAO[7], Sleth[8], Maker-Darts[9].
The feature of this algorithm for finding random values is a scheme of work in two steps. In the first step, the participants send hashes of random values and deposit a pledge. In the second step, the disclosure of the values​​ takes place, from which the resulting random number is drawn.
If one of the participants cheats and does not disclose a proposed number, then his pledge is lost. This motivates all participants in the generation to be honest. This method is subject to DDOS attack, resulting in the loss of pledges by honest participants.

Add a black and white diagram readable on small screens. Old diagrams see here

Different gambling games have different requirements for the architecture and reliability of the PRNG. For a large jackpot drawings, they are higher, and at handing out cards in poker with small bets, they are significantly lower.
Each of the above approaches has its own value. One of the most sophisticated, reliable, long and costly is the Commit / Reveal algorithm (RanDAO).
On the other hand, the simplest one is the internal method. For example, the Rouleth project uses this method. The studies described below have shown that cheating is possible, but insignificant, if the bet does not reach high values.
To fight the miners’ fraud, one must choose such parameters that it would be not economically interesting. The Rouleth conducted a simulation, the results of which are available on github[10]. The analysis showed that the attacker must possess at least 3% of the capacity of the network. In this case, the attacker should spend about 23 ETH per block. This value, however, decreases as the possession of the computation capacity by the attacker increases. If he possesses 10% of the network, then  only 2 ETH per block is needed for the attack, and 25% of capacity decreases this amount  to 1.2 ETH. The attacker will be forced to spend 0.5 ETH if he owns 51% of the network;the entire network is subject to far greater danger than a simple roulette hack.
Game developer & architect should intentionally keep the gain volume low so that it would be economically unprofitable for the attacker to practice deception. Please note that the cheating miner can make a lot of bets per block to increase the probability of winning. Therefore, we have set the maximum number of bets per block to 2 (but this can be changed).
In the world, as of 2017 there are 7 mining pools which have a capacity of more than 3% each.
EthereumLottery[11] project uses a hybrid method of random number generation: through BTCRelay. A contract receives a new block hash  from Bitcoin network. The advantage of this approach is sufficiently high reliability, the disadvantage is the low performance of the algorithm, because the Bitcoin block is generated significantly longer than in Ethereum’s. Here is what the author of the project says:
Imagine that the jackpot is $5,000, and the attacker owns 5% of the capacity of the whole Bitcoin network. Imagine that the attacker buys tickets for $5,000, and now owns 50% of all tickets, and the jackpot becomes $10,000. 
At this moment, the attacker has the expectation of $10,000 * 50% * 99.5% (the lottery takes a commission of 0.5%) = $4,975. In one of twenty cases (5% capacity belongs to the attacker), the attacker can replace the block, which will decide the fate of the draw.
If he finds a block, and learns that he has not won in the lottery, he drops it (which gives him another attempt), and if he wins he sends it to the network. This increases the chances of success from 50% to 75% because only in 25% of cases 2 attempts lose.
But when the attacker drops a block - he loses the reward for mining. The losses amount to $4218.75, taking into account the current size of the reward equal to 12.5 BTC.
An increase in the chance to win gives an expectation equal to $10,000 * 75% * 99.5% = $7,462.50. The attacker spent $5000 for tickets, and lost $4218.75 at the unit dropping. This means that such fraud is not economically profitable. It becomes profitable only when the jackpot is more than $10,000.
  
3.5. First implementation used in DAO.Casino protocol
We chose to implement and test Signidice algorithm described by Gluk256 in his repository here.
This algorithm is suitable for those Ethereum-based games, where outcome of every round for the player depends only on the RNG and (optionally) the number, chosen by the player, but not on the action of other players. E.g. it may be suitable for roulette, slots, etc., but not for those games, where outcome depends on the other players or just their number, as may be the case in lotteries. For example, a game of roulette could be modeled as a number of rounds where a single player plays against the casino. In this case, a pseudorandom number could be generated with the following algorithm.

As far as we’re concerned this method haven’t been yet implemented.

4. Initial test platform
«Dao.Casino Platform» is an online platform like AppStore (front-end) where the developers can showcase their contract based games and the players can discover them. In the alpha version front end is stored on a central server and is built to address discovery issues as well as the ranking of the available games. 
The platform is open source and released by completion under LICENCE!, 
In the future the platform code and it’s ranking algorithms will be improved and decentralised solutions can be used to host it i.e. IPFS, Swarm. Other teams can create regional versions and get from 20% to 40% of gains obtained from the players.
By the time of system launch the main goal of the platform is to provide an interface. As we have mentioned before, at least one front-end platform is needed for the whole reward system to make sense. 
Alpha platform tasks are:
Game discovery and ranking
Provide user interface familiar to the wide range of players, not just decentralisation enthusiasts
Provide a simple way to deposit and withdraw BET tokens
Maintain affiliate program - referrers office
Re-direct developers to developers documentation, wikis and code.
Thematic priority of alpha platform are classic gambling games: card games, slot machines. Currently Blackjack from partner’s team and Dice from DAO.Casino core team  are available for testing. 
Alpha platform will also play a role of information hub that aggregates developer’s resources: documentation, wikis, tutorials and examples.

